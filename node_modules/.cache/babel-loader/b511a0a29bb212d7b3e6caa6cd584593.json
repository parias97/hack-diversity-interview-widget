{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\src\\\\components\\\\SingleConversation\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage as _sendMessage } from '../../modules/message/actions';\nimport './style.css';\n\nvar SingleConversation = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SingleConversation, _PureComponent);\n\n  var _super = _createSuper(SingleConversation);\n\n  function SingleConversation(props) {\n    var _this;\n\n    _classCallCheck(this, SingleConversation);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeInput = function (e) {\n      _this.setState({\n        messageInput: e.target.value\n      });\n    };\n\n    _this.maybeSubmit = function (e) {\n      if (e.keyCode === 13) {\n        e.preventDefault();\n\n        _this.props.dispatcher.sendMessage(_this.state.messageInput, _this.props.conversationId);\n\n        _this.setState({\n          messageInput: ''\n        });\n      }\n    };\n\n    _this.getTime = function (timeMS) {\n      // Get the current time in human readable format of the current ms\n      var time = new Date().now; // Extract the hours and minutes from the time\n      //let hour = time.getHours();\n      //let min = time.getMinutes();\n\n      var prevTimestamp = _this.state.beginningOfFiveMinInterval; //if((min - prevTimeStamp))\n      //return hour + \":\" + min;\n\n      return time;\n    };\n\n    _this.showTimestamp = function (timeMS) {};\n\n    _this.state = {\n      messageInput: '',\n      showTimestamp: true,\n      beginningOfFiveMinInterval: 0\n    };\n    return _this;\n  }\n\n  _createClass(SingleConversation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var messages = this.props.messages;\n      var messageInput = this.state.messageInput;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-sidebar-single-conversation--container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-sidebar-single-conversation-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, messages.map(function (message) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: message.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, message.body, \" \", _this2.getTime(message.createdAt));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-sidebar-single-conversation-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Type and press enter to send\",\n        value: messageInput,\n        onChange: this.onChangeInput,\n        onKeyDown: this.maybeSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SingleConversation;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var conversationId = state.conversation.selectedConversation;\n  return {\n    messages: state.message.byConversationId[conversationId] || [],\n    conversationId: conversationId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatcher: {\n      sendMessage: function sendMessage(messageBody, conversationId) {\n        return dispatch(_sendMessage({\n          body: messageBody,\n          conversationId: conversationId\n        }));\n      }\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleConversation);","map":{"version":3,"sources":["C:/Users/peter/OneDrive/Desktop/Drift-Widget/hack-diversity-interview-widget/src/components/SingleConversation/index.js"],"names":["React","PureComponent","connect","sendMessage","SingleConversation","props","onChangeInput","e","setState","messageInput","target","value","maybeSubmit","keyCode","preventDefault","dispatcher","state","conversationId","getTime","timeMS","time","Date","now","prevTimestamp","beginningOfFiveMinInterval","showTimestamp","messages","map","message","id","body","createdAt","mapStateToProps","conversation","selectedConversation","byConversationId","mapDispatchToProps","dispatch","messageBody"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { sendMessage } from '../../modules/message/actions';\r\nimport './style.css';\r\n\r\n\r\nclass SingleConversation extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageInput: '',\r\n      showTimestamp: true,\r\n      beginningOfFiveMinInterval: 0,\r\n    };\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({\r\n      messageInput: e.target.value,\r\n    });\r\n  }\r\n\r\n  maybeSubmit = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.props.dispatcher.sendMessage(this.state.messageInput, this.props.conversationId);\r\n      this.setState({\r\n        messageInput: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  // fiveMinutesAgo = (timeMS) => {\r\n  //   const \r\n  // }\r\n\r\n  // if current message is created at a 5 minute mark, print time\r\n  // if created within 0 - 5 mins, round down to the nearest 5 min mark\r\n  getTime = (timeMS) => {\r\n    // Get the current time in human readable format of the current ms\r\n    let time = new Date().now\r\n    // Extract the hours and minutes from the time\r\n    //let hour = time.getHours();\r\n    //let min = time.getMinutes();\r\n\r\n    let prevTimestamp = this.state.beginningOfFiveMinInterval;\r\n\r\n    //if((min - prevTimeStamp))\r\n    //return hour + \":\" + min;\r\n    return time;\r\n  }\r\n\r\n  showTimestamp = (timeMS) => {\r\n\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      messages,\r\n    } = this.props;\r\n\r\n    const {\r\n      messageInput,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"drift-sidebar-single-conversation--container\">\r\n        <div className=\"drift-sidebar-single-conversation-body\">\r\n          {messages.map(message => \r\n          <div key={message.id}>{message.body} {this.getTime(message.createdAt)}</div>)}\r\n        </div>\r\n        <div className=\"drift-sidebar-single-conversation-input\">\r\n          <input placeholder=\"Type and press enter to send\" value={messageInput} onChange={this.onChangeInput} onKeyDown={this.maybeSubmit} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const conversationId = state.conversation.selectedConversation;\r\n  return {\r\n    messages: state.message.byConversationId[conversationId] || [],\r\n    conversationId,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatcher: {\r\n    sendMessage: (messageBody, conversationId) => dispatch(sendMessage({ body: messageBody, conversationId, })),\r\n  }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleConversation);\r\n"]},"metadata":{},"sourceType":"module"}