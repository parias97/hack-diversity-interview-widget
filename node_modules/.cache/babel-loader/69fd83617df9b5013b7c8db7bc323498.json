{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\src\\\\components\\\\StartConversation\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { startNewConversation as _startNewConversation } from '../../modules/conversation/actions';\nimport './style.css';\n\nvar StartConversation = /*#__PURE__*/function (_Component) {\n  _inherits(StartConversation, _Component);\n\n  var _super = _createSuper(StartConversation);\n\n  function StartConversation(props) {\n    var _this;\n\n    _classCallCheck(this, StartConversation);\n\n    _this = _super.call(this, props);\n\n    _this.onMessageChange = function (e) {\n      _this.setState({\n        messageInput: e.target.value\n      });\n    };\n\n    _this.maybeSubmitOrCancel = function (e) {\n      if (e.keyCode === 27) {\n        e.preventDefault();\n\n        _this.props.onClose();\n      } else if (e.keyCode === 13) {\n        e.preventDefault();\n\n        _this.props.dispatcher.startNewConversation({\n          body: _this.state.messageInput,\n          attributes: {\n            sentFromGreeting: true\n          }\n        });\n      }\n    };\n\n    _this.state = {\n      messageInput: ''\n    };\n    return _this;\n  }\n\n  _createClass(StartConversation, [{\n    key: \"render\",\n    value: function render() {\n      var onClose = this.props.onClose;\n      var messageInput = this.state.messageInput;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-widget-start-conversation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-widget-start-conversation--header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"Hey there! \", /*#__PURE__*/React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"wave\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }\n      }, \"\\uD83D\\uDC4B\"), \" Have any questions? Ask away!\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-widget-start-conversation--input-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Type and press enter to send\",\n        autoFocus: true,\n        onChange: this.onMessageChange,\n        value: messageInput,\n        onKeyDown: this.maybeSubmitOrCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-widget-button\",\n        onClick: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"chat bubble\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, \"\\u274C\")));\n    }\n  }]);\n\n  return StartConversation;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatcher: {\n      startNewConversation: function startNewConversation(message) {\n        return dispatch(_startNewConversation(message));\n      }\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(StartConversation);","map":{"version":3,"sources":["C:/Users/peter/OneDrive/Desktop/Drift-Widget/hack-diversity-interview-widget/src/components/StartConversation/index.js"],"names":["React","Component","Fragment","connect","startNewConversation","StartConversation","props","onMessageChange","e","setState","messageInput","target","value","maybeSubmitOrCancel","keyCode","preventDefault","onClose","dispatcher","body","state","attributes","sentFromGreeting","mapDispatchToProps","dispatch","message"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAoB,IAApBA,qBAAT,QAAqC,oCAArC;AACA,OAAO,aAAP;;IAGMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAQnBC,eARmB,GAQD,UAACC,CAAD,EAAO;AACvB,YAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AADX,OAAd;AAGD,KAZkB;;AAAA,UAcnBC,mBAdmB,GAcG,UAACL,CAAD,EAAO;AAC3B,UAAIA,CAAC,CAACM,OAAF,KAAc,EAAlB,EAAsB;AACpBN,QAAAA,CAAC,CAACO,cAAF;;AACA,cAAKT,KAAL,CAAWU,OAAX;AACD,OAHD,MAGO,IAAIR,CAAC,CAACM,OAAF,KAAc,EAAlB,EAAsB;AAC3BN,QAAAA,CAAC,CAACO,cAAF;;AACA,cAAKT,KAAL,CAAWW,UAAX,CAAsBb,oBAAtB,CAA2C;AACzCc,UAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWT,YADwB;AAEzCU,UAAAA,UAAU,EAAE;AACVC,YAAAA,gBAAgB,EAAE;AADR;AAF6B,SAA3C;AAMD;AACF,KA3BkB;;AAGjB,UAAKF,KAAL,GAAa;AACXT,MAAAA,YAAY,EAAE;AADH,KAAb;AAHiB;AAMlB;;;;WAuBD,kBAAS;AAAA,UAELM,OAFK,GAGH,KAAKV,KAHF,CAELU,OAFK;AAAA,UAMLN,YANK,GAOH,KAAKS,KAPF,CAMLT,YANK;AASP,0BACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAe;AAAM,QAAA,IAAI,EAAC,KAAX;AAAiB,sBAAW,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAf,mCADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,WAAW,EAAC,8BAAnB;AAAkD,QAAA,SAAS,MAA3D;AAA4D,QAAA,QAAQ,EAAE,KAAKH,eAA3E;AAA4F,QAAA,KAAK,EAAEG,YAAnG;AAAiH,QAAA,SAAS,EAAE,KAAKG,mBAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF,eASE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,OAAO,EAAEG,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,IAAI,EAAC,KAAX;AAAiB,sBAAW,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CATF,CADF;AAeD;;;;EAtD6Bf,S;;AAyDhC,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCN,IAAAA,UAAU,EAAE;AACVb,MAAAA,oBAAoB,EAAE,8BAACoB,OAAD;AAAA,eAAaD,QAAQ,CAACnB,qBAAoB,CAACoB,OAAD,CAArB,CAArB;AAAA;AADZ;AAD0B,GAAL;AAAA,CAAnC;;AAOA,eAAerB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCjB,iBAAlC,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { startNewConversation } from '../../modules/conversation/actions';\r\nimport './style.css'\r\n\r\n\r\nclass StartConversation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messageInput: '',\r\n    };\r\n  }\r\n\r\n  onMessageChange = (e) => {\r\n    this.setState({\r\n      messageInput: e.target.value,\r\n    });\r\n  }\r\n\r\n  maybeSubmitOrCancel = (e) => {\r\n    if (e.keyCode === 27) {\r\n      e.preventDefault();\r\n      this.props.onClose();\r\n    } else if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.props.dispatcher.startNewConversation({\r\n        body: this.state.messageInput,\r\n        attributes: {\r\n          sentFromGreeting: true,\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClose,\r\n    } = this.props;\r\n\r\n    const {\r\n      messageInput,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"drift-widget-start-conversation\">\r\n          <div className=\"drift-widget-start-conversation--header\">\r\n            <h5>Hey there! <span role=\"img\" aria-label=\"wave\">👋</span> Have any questions? Ask away!</h5>\r\n          </div>\r\n          <div className=\"drift-widget-start-conversation--input-container\">\r\n            <input placeholder=\"Type and press enter to send\" autoFocus onChange={this.onMessageChange} value={messageInput} onKeyDown={this.maybeSubmitOrCancel} />\r\n          </div>\r\n        </div>\r\n        <div className=\"drift-widget-button\" onClick={onClose}>\r\n          <span role=\"img\" aria-label=\"chat bubble\">❌</span>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatcher: {\r\n    startNewConversation: (message) => dispatch(startNewConversation(message)),\r\n  }\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(StartConversation);\r\n"]},"metadata":{},"sourceType":"module"}