{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\src\\\\components\\\\SingleConversation\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage as _sendMessage } from '../../modules/message/actions';\nimport './style.css';\n\nvar SingleConversation = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SingleConversation, _PureComponent);\n\n  var _super = _createSuper(SingleConversation);\n\n  function SingleConversation(props) {\n    var _this;\n\n    _classCallCheck(this, SingleConversation);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeInput = function (e) {\n      _this.setState({\n        messageInput: e.target.value\n      });\n    };\n\n    _this.maybeSubmit = function (e) {\n      if (e.keyCode === 13) {\n        e.preventDefault();\n\n        _this.props.dispatcher.sendMessage(_this.state.messageInput, _this.props.conversationId);\n\n        _this.setState({\n          messageInput: ''\n        });\n      }\n    };\n\n    _this.getTime = function (timeMS) {\n      // Get the current time in human readable format of the current ms\n      var date = new Date(timeMS);\n      var time = date.getTime();\n      var hour = date.getHours();\n      var mins = date.getMinutes();\n      var lastTime = _this.state.beginningOfFiveMinInterval;\n      var FIVE_MINS = 5 * 60 * 1000;\n      var showTimestamp = false; // find the difference between the current message time sent and the last message time sent and compare to five mins\n\n      if (time - lastTime >= FIVE_MINS) {\n        _this.setState({\n          beginningOfFiveMinInterval: time\n        });\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }\n        }, time);\n      }\n    };\n\n    _this.state = {\n      messageInput: '',\n      showTimestamp: true,\n      beginningOfFiveMinInterval: 0\n    };\n    return _this;\n  }\n\n  _createClass(SingleConversation, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var FIVE_MINS = 5 * 60 * 1000; // [message timestamp, [array of messages for the interval]]\n\n      var timeStampMap = new Map();\n      var messages = this.props.messages;\n      var messageInput = this.state.messageInput;\n      messages.forEach(function (message) {\n        var timeDifference = Date.now() - message.createdAt;\n        var timeStampInterval = Math.floor(timeDifference / FIVE_MINS);\n\n        if (!timeStampMap.has(timeStampInterval)) {\n          timeStampMap.set(timeStampInterval, [message]);\n        } else {\n          timeStampMap.get(timeStampInterval).push(message);\n        }\n      });\n      console.log(timeStampMap);\n\n      var intervals = _toConsumableArray(timeStampMap.keys());\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-sidebar-single-conversation--container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-sidebar-single-conversation-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, intervals.map(function (timeStamp) {\n        return timeStamp > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n          key: timeStamp,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }\n        }, timeStamp * 5, \" mins ago\") : /*#__PURE__*/React.createElement(\"div\", {\n          key: timeStamp,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }\n        }, \"0 mins ago\");\n      }), _toConsumableArray(timeStampMap.values()).forEach(function (val) {\n        console.log(val);\n        console.log(val[0].body);\n        val.map(function (message) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: message.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }\n          }, message.body);\n        });\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drift-sidebar-single-conversation-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Type and press enter to send\",\n        value: messageInput,\n        onChange: this.onChangeInput,\n        onKeyDown: this.maybeSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SingleConversation;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var conversationId = state.conversation.selectedConversation;\n  return {\n    messages: state.message.byConversationId[conversationId] || [],\n    conversationId: conversationId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatcher: {\n      sendMessage: function sendMessage(messageBody, conversationId) {\n        return dispatch(_sendMessage({\n          body: messageBody,\n          conversationId: conversationId\n        }));\n      }\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleConversation);","map":{"version":3,"sources":["C:/Users/peter/OneDrive/Desktop/Drift-Widget/hack-diversity-interview-widget/src/components/SingleConversation/index.js"],"names":["React","PureComponent","connect","sendMessage","SingleConversation","props","onChangeInput","e","setState","messageInput","target","value","maybeSubmit","keyCode","preventDefault","dispatcher","state","conversationId","getTime","timeMS","date","Date","time","hour","getHours","mins","getMinutes","lastTime","beginningOfFiveMinInterval","FIVE_MINS","showTimestamp","timeStampMap","Map","messages","forEach","message","timeDifference","now","createdAt","timeStampInterval","Math","floor","has","set","get","push","console","log","intervals","keys","map","timeStamp","values","val","body","id","mapStateToProps","conversation","selectedConversation","byConversationId","mapDispatchToProps","dispatch","messageBody"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { sendMessage } from '../../modules/message/actions';\r\nimport './style.css';\r\n\r\n\r\nclass SingleConversation extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      messageInput: '',\r\n      showTimestamp: true,\r\n      beginningOfFiveMinInterval: 0,\r\n    };\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({\r\n      messageInput: e.target.value,\r\n    });\r\n  }\r\n  \r\n\r\n  maybeSubmit = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      this.props.dispatcher.sendMessage(this.state.messageInput, this.props.conversationId);\r\n      this.setState({\r\n        messageInput: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  // if current message is created at a 5 minute mark, print time\r\n  // if created within 0 - 5 mins, round down to the nearest 5 min mark\r\n  getTime = (timeMS) => {\r\n    // Get the current time in human readable format of the current ms\r\n    const date  = new Date(timeMS);\r\n    const time = date.getTime();\r\n    const hour = date.getHours();\r\n    const mins = date.getMinutes();\r\n    const lastTime = this.state.beginningOfFiveMinInterval;\r\n    const FIVE_MINS = 5*60*1000;\r\n    let showTimestamp = false;\r\n\r\n    // find the difference between the current message time sent and the last message time sent and compare to five mins\r\n    if((time - lastTime) >= FIVE_MINS){\r\n      this.setState({beginningOfFiveMinInterval: time});\r\n      return <div>{time}</div>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    \r\n    const FIVE_MINS = 5*60*1000;\r\n    // [message timestamp, [array of messages for the interval]]\r\n    let timeStampMap = new Map();\r\n\r\n    const {\r\n      messages,\r\n    } = this.props;\r\n\r\n    const {\r\n      messageInput,\r\n    } = this.state;\r\n\r\n    messages.forEach((message) => {\r\n      let timeDifference = Date.now() - message.createdAt;\r\n      let timeStampInterval = Math.floor(timeDifference / FIVE_MINS);\r\n      if(!timeStampMap.has(timeStampInterval)){\r\n        timeStampMap.set(timeStampInterval, [message]);\r\n      } else {\r\n        timeStampMap.get(timeStampInterval).push(message);\r\n      }\r\n    })\r\n\r\n    console.log(timeStampMap);\r\n\r\n    let intervals = [...timeStampMap.keys()];\r\n\r\n    return (\r\n      <div className=\"drift-sidebar-single-conversation--container\">\r\n        <div className=\"drift-sidebar-single-conversation-body\">\r\n        {}\r\n          {/* {messages.map(message => <div key={message.id}>{message.body}</div>)} */}\r\n          {\r\n            intervals.map((timeStamp) => (\r\n              timeStamp > 0 ? \r\n              (<div key={timeStamp}>{timeStamp * 5} mins ago</div>) : \r\n              (<div key={timeStamp}>0 mins ago</div>)\r\n              )          \r\n\r\n            )\r\n          }\r\n          {\r\n            [...timeStampMap.values()].forEach((val) => {\r\n              console.log(val);\r\n              console.log(val[0].body);\r\n              val.map(message => (\r\n                <div key={message.id}>{message.body}</div>\r\n              ))\r\n            })\r\n          }\r\n        </div>\r\n        <div className=\"drift-sidebar-single-conversation-input\">\r\n          <input placeholder=\"Type and press enter to send\" value={messageInput} onChange={this.onChangeInput} onKeyDown={this.maybeSubmit} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const conversationId = state.conversation.selectedConversation;\r\n  return {\r\n    messages: state.message.byConversationId[conversationId] || [],\r\n    conversationId,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatcher: {\r\n    sendMessage: (messageBody, conversationId) => dispatch(sendMessage({ body: messageBody, conversationId, })),\r\n  }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleConversation);\r\n"]},"metadata":{},"sourceType":"module"}