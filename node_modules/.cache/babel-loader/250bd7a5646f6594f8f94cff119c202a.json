{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\peter\\\\OneDrive\\\\Desktop\\\\Drift-Widget\\\\hack-diversity-interview-widget\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nexport var randomID = function randomID() {\n  return \"_\".concat(Math.random().toString(36).substr(2));\n}; // this function is used in our async middleware (epics) to beef up the message with extra content\n// just before saving it\n\nexport var createBeforeServerMessage = function createBeforeServerMessage(_ref) {\n  var _ref$message = _ref.message,\n      context = _ref$message.context,\n      attributes = _ref$message.attributes,\n      rest = _objectWithoutProperties(_ref$message, [\"context\", \"attributes\"]);\n\n  return _objectSpread({}, rest, {\n    // \"context\" is information about the current site visitor. Things like their browser, device,\n    // operating system, locale, etc.\n    context: _objectSpread({}, context, {\n      location: window.location.href // please add a ton more info here\n\n    }),\n    // \"attributes\" is information that we want to keep track of. This data doesn't need to be\n    // pristine at all. You can view it as another way to save arbitrary data for a message.\n    // The attributes will be sent to the server and the server will transparently save it\n    attributes: _objectSpread({}, attributes, {\n      sentFromWidget: true,\n      clientTimestamp: Date.now()\n    })\n  });\n};","map":{"version":3,"sources":["C:/Users/peter/OneDrive/Desktop/Drift-Widget/hack-diversity-interview-widget/src/utils/index.js"],"names":["randomID","Math","random","toString","substr","createBeforeServerMessage","message","context","attributes","rest","location","window","href","sentFromWidget","clientTimestamp","Date","now"],"mappings":";;AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW;AAAA,oBAAUC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CAAV;AAAA,CAAjB,C,CAGP;AACA;;AACA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,0BAAGC,OAAH;AAAA,MAAcC,OAAd,gBAAcA,OAAd;AAAA,MAAuBC,UAAvB,gBAAuBA,UAAvB;AAAA,MAAsCC,IAAtC;;AAAA,2BACpCA,IADoC;AAEvC;AACA;AACAF,IAAAA,OAAO,oBACFA,OADE;AAELG,MAAAA,QAAQ,EAAEC,MAAM,CAACD,QAAP,CAAgBE,IAFrB,CAGL;;AAHK,MAJgC;AASvC;AACA;AACA;AACAJ,IAAAA,UAAU,oBACLA,UADK;AAERK,MAAAA,cAAc,EAAE,IAFR;AAGRC,MAAAA,eAAe,EAAEC,IAAI,CAACC,GAAL;AAHT;AAZ6B;AAAA,CAAlC","sourcesContent":["export const randomID = () => `_${Math.random().toString(36).substr(2)}`\r\n\r\n\r\n// this function is used in our async middleware (epics) to beef up the message with extra content\r\n// just before saving it\r\nexport const createBeforeServerMessage = ({ message: { context, attributes, ...rest } }) => ({\r\n  ...rest,\r\n  // \"context\" is information about the current site visitor. Things like their browser, device,\r\n  // operating system, locale, etc.\r\n  context: {\r\n    ...context,\r\n    location: window.location.href,\r\n    // please add a ton more info here\r\n  },\r\n  // \"attributes\" is information that we want to keep track of. This data doesn't need to be\r\n  // pristine at all. You can view it as another way to save arbitrary data for a message.\r\n  // The attributes will be sent to the server and the server will transparently save it\r\n  attributes: {\r\n    ...attributes,\r\n    sentFromWidget: true,\r\n    clientTimestamp: Date.now(),\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}